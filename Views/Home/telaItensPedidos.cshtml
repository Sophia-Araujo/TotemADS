@{
    Layout = "_LayoutItensPedidos";
    ViewBag.Title = "Itens do Pedido";
}

<!-- Botão de cupom -->
<button id="btnCupom" class="btn-cupom">
    <span>
        <i class="fas fa-ticket"></i> Tem um cupom
    </span>
</button>
<div class="titulo">
    <h1>Lanches</h1>
</div>

<!-- Lista de lanches dinâmica -->
<div id="lista-itens-pedido">
    <!-- Os itens serão carregados dinamicamente aqui -->
    <div class="loading" id="loading-itens" style="text-align: center; padding: 20px;">
        <p>Carregando itens do pedido...</p>
    </div>
    
    <div class="empty-cart" id="carrinho-vazio" style="display: none; text-align: center; padding: 40px;">
        <p>Nenhum item no carrinho</p>
        <button onclick="window.location.href='/Pedidos/TelaPedidos'" class="btn-voltar-pedidos">
            Voltar aos Pedidos
        </button>
    </div>
</div>

<!-- Resumo dos pedidos -->
<div class="resumo" id="resumo-pedido">
    <div class="total-lista" id="total-lista">
        <!-- Será preenchido dinamicamente -->
    </div>

    <div class="acoes">
        <button class="botao-cancelar" onclick="cancelarPedido()">Cancelar</button>
        <button class="botao-pagar" id="btn-finalizar-pedido" onclick="finalizarPedido()">Finalizar Pedido</button>
    </div>
</div>

<!-- Modal de Cupom -->
<div id="modalOverlay" class="modal-overlay">
    <div class="popup">
        <button class="close-btn" id="closeModal">X</button>
        <h2>DIGITE SEU CUPOM</h2>
        <input type="text" id="input" readonly />
        <small>*sujeito a invalidez ou expiração</small>
        <button class="confirmar">Confirmar</button>
        <div class="keyboard-container">
            <div class="keyboard-row" id="row1"></div>
            <div class="keyboard-row" id="row2"></div>
            <div class="keyboard-row middle-offset" id="row3"></div>
            <div class="keyboard-row" id="row4"></div>
            <div class="keyboard-row" id="row5"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/cupom.js" asp-append-version="true"></script>
    <script>
        let carrinhoPedido = [];
        let totalPedido = 0;
        let cupomAplicado = null;

        // Carregar itens do pedido ao inicializar a página
        document.addEventListener('DOMContentLoaded', function() {
            carregarItensPedido();
        });

        function carregarItensPedido() {
            const pedidoSalvo = localStorage.getItem('pedido-finalizar');
            const loadingElement = document.getElementById('loading-itens');
            const carrinhoVazioElement = document.getElementById('carrinho-vazio');
            const listaItensElement = document.getElementById('lista-itens-pedido');
            
            if (!pedidoSalvo) {
                loadingElement.style.display = 'none';
                carrinhoVazioElement.style.display = 'block';
                return;
            }

            try {
                carrinhoPedido = JSON.parse(pedidoSalvo);
                
                if (carrinhoPedido.length === 0) {
                    loadingElement.style.display = 'none';
                    carrinhoVazioElement.style.display = 'block';
                    return;
                }

                // Remover loading
                loadingElement.style.display = 'none';
                
                // Renderizar itens
                renderizarItensPedido();
                calcularResumo();
                
            } catch (error) {
                console.error('Erro ao carregar pedido:', error);
                loadingElement.style.display = 'none';
                carrinhoVazioElement.style.display = 'block';
            }
        }

        function renderizarItensPedido() {
            const listaItensElement = document.getElementById('lista-itens-pedido');
            
            // Limpar conteúdo existente
            listaItensElement.innerHTML = '';

            carrinhoPedido.forEach((item, index) => {
                const itemElement = criarElementoItem(item, index);
                listaItensElement.appendChild(itemElement);
            });
        }

        function criarElementoItem(item, index) {
            const divContainer = document.createElement('div');
            divContainer.className = 'VisualizaItensPedidos';
            
            // Preparar lista de ingredientes/personalizações
            let ingredientesHtml = '';
            
            // Adicionar ingredientes básicos (simulado)
            const ingredientesBasicos = ['Pão', 'Carne', 'Alface', 'Tomate'];
            ingredientesBasicos.forEach(ingrediente => {
                ingredientesHtml += `<li>${ingrediente} <span>1x</span></li>`;
            });
            
            // Adicionar personalizações
            if (item.personalizacoes && item.personalizacoes.length > 0) {
                item.personalizacoes.forEach(personalizacao => {
                    ingredientesHtml += `<li>${personalizacao.nome} <span>${personalizacao.quantidade}x</span></li>`;
                });
            }

            // Preparar imagem
            const imagemSrc = item.imagem && item.imagem !== '' 
                ? `data:image/jpeg;base64,${item.imagem}`
                : '/image/produtos/default.png';

            divContainer.innerHTML = `
                <div class="card-pedido">
                    <div class="card-conteudo">
                        <div class="info-lanche">
                            <img src="${imagemSrc}" alt="${item.nome}" />
                            <h2 class="nomePedido">${item.nome}</h2>
                            <h3 class="precoPedido">R$: ${(item.valor * item.quantidade).toFixed(2).replace('.', ',')}</h3>
                            <p class="descricaoPedido">${item.descricao}</p>
                            <div class="quantidade-item">
                                <span>Quantidade: ${item.quantidade}x</span>
                                <button class="btn-remover-item" onclick="removerItem(${index})" title="Remover item">
                                    ×
                                </button>
                            </div>
                        </div>

                        <div class="ingredientesPedido">
                            <ul class="ingredientesPedidoLista">
                                ${ingredientesHtml}
                            </ul>
                        </div>
                    </div>
                </div>
            `;

            return divContainer;
        }

        function calcularResumo() {
            const totalListaElement = document.getElementById('total-lista');
            
            // Agrupar por categoria
            const categorias = {};
            totalPedido = 0;

            carrinhoPedido.forEach(item => {
                const categoria = 'Lanches'; // Você pode mapear categorias reais aqui
                if (!categorias[categoria]) {
                    categorias[categoria] = { quantidade: 0, valor: 0 };
                }
                categorias[categoria].quantidade += item.quantidade;
                categorias[categoria].valor += item.valor * item.quantidade;
                totalPedido += item.valor * item.quantidade;
            });

            // Limpar resumo
            totalListaElement.innerHTML = '';

            // Adicionar linhas de categoria
            Object.keys(categorias).forEach(categoria => {
                const cat = categorias[categoria];
                const divItem = document.createElement('div');
                divItem.className = 'total-item';
                divItem.innerHTML = `
                    <span>${categoria} ${cat.quantidade}x</span>
                    <span>R$: ${cat.valor.toFixed(2).replace('.', ',')}</span>
                `;
                totalListaElement.appendChild(divItem);
            });

            // Aplicar cupom se houver
            let valorFinal = totalPedido;
            if (cupomAplicado) {
                const desconto = totalPedido * (cupomAplicado.desconto / 100);
                valorFinal = totalPedido - desconto;
                
                const divDesconto = document.createElement('div');
                divDesconto.className = 'total-item desconto';
                divDesconto.innerHTML = `
                    <span>Desconto (${cupomAplicado.codigo})</span>
                    <span>-R$: ${desconto.toFixed(2).replace('.', ',')}</span>
                `;
                totalListaElement.appendChild(divDesconto);
            }

            // Adicionar total
            const divTotal = document.createElement('div');
            divTotal.className = 'total-item total';
            divTotal.innerHTML = `
                <span>Total:</span>
                <span>R$: ${valorFinal.toFixed(2).replace('.', ',')}</span>
            `;
            totalListaElement.appendChild(divTotal);
        }

        function removerItem(index) {
            if (confirm('Deseja remover este item do pedido?')) {
                carrinhoPedido.splice(index, 1);
                
                // Atualizar localStorage
                localStorage.setItem('pedido-finalizar', JSON.stringify(carrinhoPedido));
                
                if (carrinhoPedido.length === 0) {
                    document.getElementById('carrinho-vazio').style.display = 'block';
                    document.getElementById('resumo-pedido').style.display = 'none';
                } else {
                    renderizarItensPedido();
                    calcularResumo();
                }
            }
        }

        function cancelarPedido() {
            if (confirm('Tem certeza que deseja cancelar o pedido? Todos os itens serão removidos.')) {
                localStorage.removeItem('pedido-finalizar');
                window.location.href = '/Pedidos/TelaPedidos';
            }
        }

        function finalizarPedido() {
            if (carrinhoPedido.length === 0) {
                alert('Carrinho vazio!');
                return;
            }

            try {
                // Calcular valor final com cupom
                let valorFinal = totalPedido;
                if (cupomAplicado) {
                    const desconto = totalPedido * (cupomAplicado.desconto / 100);
                    valorFinal = totalPedido - desconto;
                }

                // Preparar dados do pedido para envio
                const dadosPedido = {
                    itens: carrinhoPedido.map(item => ({
                        produtoId: item.id,
                        nome: item.nome,
                        quantidade: item.quantidade,
                        valor: item.valor,
                        valorTotal: item.valor * item.quantidade,
                        personalizacoes: item.personalizacoes || [],
                        imagem: item.imagem || null,
                        descricao: item.descricao || ''
                    })),
                    subtotal: totalPedido,
                    total: valorFinal,
                    cupom: cupomAplicado ? {
                        codigo: cupomAplicado.codigo,
                        desconto: cupomAplicado.desconto,
                        valorDesconto: totalPedido * (cupomAplicado.desconto / 100)
                    } : null,
                    dataHora: new Date().toISOString(),
                    quantidadeItens: carrinhoPedido.reduce((total, item) => total + item.quantidade, 0)
                };

                // Salvar dados do pedido no localStorage para a tela de pagamento
                localStorage.setItem('dados-pedido-pagamento', JSON.stringify(dadosPedido));
                
                // Redirecionar para a tela de pagamentos
                window.location.href = '/Pagamento/Index';
                
            } catch (error) {
                console.error('Erro ao finalizar pedido:', error);
                alert('Erro ao processar pedido: ' + error.message);
            }
        }

        // Função para aplicar cupom (integração com o sistema de cupom existente)
        async function aplicarCupom(codigoCupom) {
            try {
                const response = await fetch('/Pedidos/ValidarCupom', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ codigo: codigoCupom })
                });

                const result = await response.json();

                if (result.success) {
                    cupomAplicado = { 
                        codigo: result.codigo, 
                        desconto: result.desconto 
                    };
                    calcularResumo();
                    alert(`Cupom ${result.codigo} aplicado com sucesso! Desconto de ${result.desconto}%`);
                    return true;
                } else {
                    alert(result.message || 'Cupom inválido ou expirado.');
                    return false;
                }
            } catch (error) {
                console.error('Erro ao validar cupom:', error);
                alert('Erro ao validar cupom. Tente novamente.');
                return false;
            }
        }

        // Integração com o sistema de cupom existente
        if (typeof window.aplicarCupomCallback === 'undefined') {
            window.aplicarCupomCallback = aplicarCupom;
        }
    </script>

    <style>
        .quantidade-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .btn-remover-item {
            background: #ff4444;
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            cursor: pointer;
            font-size: 16px;
            line-height: 1;
        }

        .btn-remover-item:hover {
            background: #cc0000;
        }

        .btn-voltar-pedidos {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        .btn-voltar-pedidos:hover {
            background: #0056b3;
        }

        .loading {
            color: #666;
        }

        .empty-cart {
            color: #999;
        }

        .total-item.desconto {
            color: #28a745;
            font-weight: bold;
        }

        .total-item.desconto span:last-child {
            color: #28a745;
        }
    </style>
}