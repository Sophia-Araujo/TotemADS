@model TotemPWA.Models.Igrediente

@{
    ViewData["Title"] = "Editar Ingrediente";
}

<h1>Editar Ingrediente</h1>

<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IgredienteId" />
            
            <div class="form-group mb-3">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Valor" class="control-label"></label>
                <input asp-for="Valor" class="form-control" type="number" step="0.01" min="0" />
                <span asp-validation-for="Valor" class="text-danger"></span>
            </div>

            <!-- Mostrar imagem atual -->
            @if (Model.Imagem != null)
            {
                <div class="form-group mb-3">
                    <label class="control-label">Imagem Atual</label>
                    <div>
                        <img src="@Url.Action("GetImagem", "Ingrediente", new { id = Model.IgredienteId })" 
                             alt="@Model.Nome" 
                             class="img-thumbnail" 
                             style="max-width: 300px; max-height: 200px;" />
                    </div>
                </div>
            }
            else
            {
                <div class="form-group mb-3">
                    <label class="control-label">Imagem Atual</label>
                    <div class="bg-light p-3 text-center rounded">
                        <i class="fas fa-image fa-2x text-muted"></i>
                        <p class="text-muted mb-0">Nenhuma imagem</p>
                    </div>
                </div>
            }
            
            <div class="form-group mb-3">
                <label for="imagemFile" class="control-label">Nova Imagem (opcional)</label>
                <input type="file" id="imagemFile" name="imagemFile" class="form-control" accept="image/*" />
                <div class="form-text">
                    Deixe em branco para manter a imagem atual. 
                    Formatos aceitos: .jpg, .jpeg, .png, .gif
                </div>
            </div>

            <!-- Preview da nova imagem -->
            <div class="form-group mb-3">
                <img id="imagePreview" src="#" alt="Preview da nova imagem" 
                     style="max-width: 300px; max-height: 200px; display: none;" 
                     class="img-thumbnail" />
            </div>
            
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Voltar para Lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.getElementById('imagemFile').addEventListener('change', function(e) {
            const file = e.target.files[0];
            const preview = document.getElementById('imagePreview');
            
            if (file) {
                // Validar tipo de arquivo
                const allowedExtensions = ['.jpg', '.jpeg', '.png', '.gif'];
                const fileName = file.name.toLowerCase();
                const isValidType = allowedExtensions.some(ext => fileName.endsWith(ext));
                
                if (!isValidType) {
                    alert('Apenas arquivos de imagem são permitidos (.jpg, .jpeg, .png, .gif)');
                    this.value = '';
                    preview.style.display = 'none';
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                preview.style.display = 'none';
            }
        });
    </script>
}